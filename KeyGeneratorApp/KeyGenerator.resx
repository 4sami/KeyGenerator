<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="keyboardpictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/7AARRHVja3kAAQAEAAAAPAAA/9sAQwACAQECAQECAgICAgICAgMF
        AwMDAwMGBAQDBQcGBwcHBgcHCAkLCQgICggHBwoNCgoLDAwMDAcJDg8NDA4LDAwM/9sAQwECAgIDAwMG
        AwMGDAgHCAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwM/8AA
        EQgAFwApAwEiAAIRAQMRAf/EAB8AAAEFAQEBAQEBAAAAAAAAAAABAgMEBQYHCAkKC//EALUQAAIBAwMC
        BAMFBQQEAAABfQECAwAEEQUSITFBBhNRYQcicRQygZGhCCNCscEVUtHwJDNicoIJChYXGBkaJSYnKCkq
        NDU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6g4SFhoeIiYqSk5SVlpeYmZqio6Sl
        pqeoqaqys7S1tre4ubrCw8TFxsfIycrS09TV1tfY2drh4uPk5ebn6Onq8fLz9PX29/j5+v/EAB8BAAMB
        AQEBAQEBAQEAAAAAAAABAgMEBQYHCAkKC//EALURAAIBAgQEAwQHBQQEAAECdwABAgMRBAUhMQYSQVEH
        YXETIjKBCBRCkaGxwQkjM1LwFWJy0QoWJDThJfEXGBkaJicoKSo1Njc4OTpDREVGR0hJSlNUVVZXWFla
        Y2RlZmdoaWpzdHV2d3h5eoKDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJ
        ytLT1NXW19jZ2uLj5OXm5+jp6vLz9PX29/j5+v/aAAwDAQACEQMRAD8A/XbTNI8d/GD4v/FGO0+Knirw
        tpnhXxFBpFjYadpukSQpEdI067Zi9xZyyFjLdSHlsY2gYxXl9rrvxUl/Y38DfEmT40+Ll1PxQPDZuLf+
        ydCFvH/ad7Z28uzNhkbFuWK5Y8quepFQeJY/gQn7S3xn/wCFo+FLPW9dn8T2sdvcy+FbvVmW1Gg6TtTz
        YYJFTDmQhSQfmJxg14hZWX7Pl9+yR4N0QeBbSb4o6dF4W/t+EeC75ryD/TbM3plf7PtwYVud3zYYBwM5
        xXqU6VorTt9lPS3f1PGlV953ff7TWt/8j6m8VeF/iVoH7RPgnwbH8b/Gz2XifRtX1GaY6ToJljks3sFR
        VP8AZwADC7fIIJ+VeRyDF8K/D/xL8ffF74oeHJ/jh40jg8C6pZ2Nq8Ok6CZJUn022uy0mdPxkNMyjAUE
        KOhzXifizSf2Zrn9ojwXeab8O7dPCdtoerjWtnw81JYWuXksDahozaAu2FuiNoIGWzjIDVvh5p37Lui/
        FD4oTeJvh/YQeGL/AFiyj8O/afAGotEYXsLOOVYl+y5XfdtIuCAWdsgEmmoe7t0/ljvf/IHL3ltv/M+3
        +Z3nh34g/FT/AIYi8LfFm5+L3iW71TVG0ySfT5NJ0VbJ1uL+C2dPlsRIBtlOMPnOOeePt3yB6t+dflb4
        Z0X4H+Hf2LvBcY8DDS/i5Hc6NFJdSeDL6C4juP7Sty+bl7YRriNny28cZGck1+qe8+1c+JglbTq+iXbs
        a0KjTav0XVvU+ebaX4p/Cn4w/Ea40D4d6b4r0bxdr8GsW16fEcNg6KNKsbN4zE8bHIks3IOehz7HnvBN
        98cPCXx38d+Lm+DmkTWvi+DTYIYE8Z26yW5tEmRixMODu8wEYHG09eKKKwjUvFNrou50zp2k0nsyp8Xf
        +CkXij4EfF74deA/Ffww07S/FnxYu7qx8K2J8U/aP7Vmto0knTzI7Ro4tqSIcysgOeCSCK2vjXrnxr+L
        ng6y0lPg9pGnNb67pGrGWTxlBIpFlqdrelMCHq6wMoPQFgSMUUUoVFdJRX4/5jlC61f5FT46Xnxl/aD+
        GkvhZ/hRpWhx3mpWEs16/i6C4FsltfQXDt5YhBYkREAA9SPevqDz4v7x/KiiitOySS/rQmjTTbbP/9k=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAgAAAAAAAAAAAAAAACAAAGBAAAAAICAgIE=
</value>
  </data>
</root>